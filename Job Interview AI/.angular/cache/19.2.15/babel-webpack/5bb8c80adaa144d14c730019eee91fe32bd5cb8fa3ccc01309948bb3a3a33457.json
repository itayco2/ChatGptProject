{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/itay7/Desktop/Job Interview AI/Job Interview AI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { InputComponent } from \"../input/input.component\";\nimport { OutputComponent } from \"../output/output.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/prompt-engineering.service\";\nimport * as i2 from \"../../../services/gpt.service\";\nexport let AiComponent = /*#__PURE__*/(() => {\n  class AiComponent {\n    promptEngineeringService;\n    gptService;\n    qnas = null;\n    constructor(promptEngineeringService, gptService) {\n      this.promptEngineeringService = promptEngineeringService;\n      this.gptService = gptService;\n    }\n    send(details) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          _this.qnas = [];\n          // Create prompt: \n          const prompt = _this.promptEngineeringService.createPrompt(details);\n          // Get completion from GPT: \n          const completion = yield _this.gptService.getCompletion(prompt);\n          // Extract inner json: \n          const json = _this.extractJson(completion);\n          // Set in qnas array: \n          _this.qnas = JSON.parse(json);\n        } catch (err) {\n          alert(err.message);\n        }\n      })();\n    }\n    extractJson(completion) {\n      const index1 = completion.indexOf(\"[\");\n      const index2 = completion.lastIndexOf(\"]\");\n      const json = completion.substring(index1, index2 + 1);\n      return json;\n    }\n    static ɵfac = function AiComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AiComponent)(i0.ɵɵdirectiveInject(i1.PromptEngineeringService), i0.ɵɵdirectiveInject(i2.GptService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AiComponent,\n      selectors: [[\"app-ai\"]],\n      decls: 5,\n      vars: 1,\n      consts: [[3, \"selected\"], [3, \"qnas\"]],\n      template: function AiComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"section\")(2, \"app-input\", 0);\n          i0.ɵɵlistener(\"selected\", function AiComponent_Template_app_input_selected_2_listener($event) {\n            return ctx.send($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"section\");\n          i0.ɵɵelement(4, \"app-output\", 1);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"qnas\", ctx.qnas);\n        }\n      },\n      dependencies: [InputComponent, OutputComponent],\n      styles: [\"div[_ngcontent-%COMP%] {\\n    height: 100%;\\n    display: flex;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n    border: 1px solid black;\\n    flex: 1;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9haS1hcmVhL2FpL2FpLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixPQUFPO0FBQ1giLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxuXG5zZWN0aW9uIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICBmbGV4OiAxO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n  return AiComponent;\n})();","map":{"version":3,"names":["InputComponent","OutputComponent","AiComponent","promptEngineeringService","gptService","qnas","constructor","send","details","_this","_asyncToGenerator","prompt","createPrompt","completion","getCompletion","json","extractJson","JSON","parse","err","alert","message","index1","indexOf","index2","lastIndexOf","substring","i0","ɵɵdirectiveInject","i1","PromptEngineeringService","i2","GptService","selectors","decls","vars","consts","template","AiComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AiComponent_Template_app_input_selected_2_listener","$event","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","styles"],"sources":["C:\\Users\\itay7\\Desktop\\Job Interview AI\\Job Interview AI\\src\\app\\components\\ai-area\\ai\\ai.component.ts","C:\\Users\\itay7\\Desktop\\Job Interview AI\\Job Interview AI\\src\\app\\components\\ai-area\\ai\\ai.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DetailsModel } from '../../../models/details.model';\nimport { QnaModel } from '../../../models/qna.model';\nimport { GptService } from '../../../services/gpt.service';\nimport { PromptEngineeringService } from '../../../services/prompt-engineering.service';\nimport { InputComponent } from \"../input/input.component\";\nimport { OutputComponent } from \"../output/output.component\";\n\n@Component({\n    selector: 'app-ai',\n    imports: [InputComponent, OutputComponent],\n    templateUrl: './ai.component.html',\n    styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n\n    public qnas: QnaModel[] = null;\n\n    public constructor(private promptEngineeringService: PromptEngineeringService, private gptService: GptService) { }\n\n    public async send(details: DetailsModel) {\n\n        try {\n\n            this.qnas = [];\n\n            // Create prompt: \n            const prompt = this.promptEngineeringService.createPrompt(details);\n\n            // Get completion from GPT: \n            const completion = await this.gptService.getCompletion(prompt);\n\n            // Extract inner json: \n            const json = this.extractJson(completion);\n\n            // Set in qnas array: \n            this.qnas = JSON.parse(json);\n            \n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n    }\n\n    private extractJson(completion: string): string {\n        const index1 = completion.indexOf(\"[\");\n        const index2 = completion.lastIndexOf(\"]\");\n        const json = completion.substring(index1, index2 + 1);\n        return json;\n    }\n\n}\n","<div>\n\n    <section>\n        <app-input (selected)=\"send($event)\" />\n    </section>\n\n    <section>\n        <app-output [qnas]=\"qnas\" />\n    </section>\n\n</div>"],"mappings":";AAKA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,eAAe,QAAQ,4BAA4B;;;;AAQ5D,WAAaC,WAAW;EAAlB,MAAOA,WAAW;IAIOC,wBAAA;IAA4DC,UAAA;IAFhFC,IAAI,GAAe,IAAI;IAE9BC,YAA2BH,wBAAkD,EAAUC,UAAsB;MAAlF,KAAAD,wBAAwB,GAAxBA,wBAAwB;MAAoC,KAAAC,UAAU,GAAVA,UAAU;IAAgB;IAEpGG,IAAIA,CAACC,OAAqB;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QAEnC,IAAI;UAEAD,KAAI,CAACJ,IAAI,GAAG,EAAE;UAEd;UACA,MAAMM,MAAM,GAAGF,KAAI,CAACN,wBAAwB,CAACS,YAAY,CAACJ,OAAO,CAAC;UAElE;UACA,MAAMK,UAAU,SAASJ,KAAI,CAACL,UAAU,CAACU,aAAa,CAACH,MAAM,CAAC;UAE9D;UACA,MAAMI,IAAI,GAAGN,KAAI,CAACO,WAAW,CAACH,UAAU,CAAC;UAEzC;UACAJ,KAAI,CAACJ,IAAI,GAAGY,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;QAEhC,CAAC,CACD,OAAOI,GAAQ,EAAE;UACbC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;QACtB;MAAC;IACL;IAEQL,WAAWA,CAACH,UAAkB;MAClC,MAAMS,MAAM,GAAGT,UAAU,CAACU,OAAO,CAAC,GAAG,CAAC;MACtC,MAAMC,MAAM,GAAGX,UAAU,CAACY,WAAW,CAAC,GAAG,CAAC;MAC1C,MAAMV,IAAI,GAAGF,UAAU,CAACa,SAAS,CAACJ,MAAM,EAAEE,MAAM,GAAG,CAAC,CAAC;MACrD,OAAOT,IAAI;IACf;;uCAnCSb,WAAW,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,wBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;IAAA;;YAAX9B,WAAW;MAAA+B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCXhBZ,EAHR,CAAAc,cAAA,UAAK,cAEQ,mBACkC;UAA5Bd,EAAA,CAAAe,UAAA,sBAAAC,mDAAAC,MAAA;YAAA,OAAYJ,GAAA,CAAAjC,IAAA,CAAAqC,MAAA,CAAY;UAAA,EAAC;UACxCjB,EADI,CAAAkB,YAAA,EAAuC,EACjC;UAEVlB,EAAA,CAAAc,cAAA,cAAS;UACLd,EAAA,CAAAmB,SAAA,oBAA4B;UAGpCnB,EAFI,CAAAkB,YAAA,EAAU,EAER;;;UAHclB,EAAA,CAAAoB,SAAA,GAAa;UAAbpB,EAAA,CAAAqB,UAAA,SAAAR,GAAA,CAAAnC,IAAA,CAAa;;;qBDGnBL,cAAc,EAAEC,eAAe;MAAAgD,MAAA;IAAA;;SAIhC/C,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}