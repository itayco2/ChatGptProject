{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/itay7/Desktop/Job Interview AI/Job Interview AI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { DetailsModel } from '../../../models/details.model';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/button\";\nexport let InputComponent = /*#__PURE__*/(() => {\n  class InputComponent {\n    details = new DetailsModel();\n    selected = new EventEmitter(); // Declaring an event.\n    send() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.selected.emit(_this.details); // Raising an event.\n      })();\n    }\n    static ɵfac = function InputComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InputComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InputComponent,\n      selectors: [[\"app-input\"]],\n      outputs: {\n        selected: \"selected\"\n      },\n      decls: 22,\n      vars: 3,\n      consts: [[3, \"submit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"subject\", 3, \"ngModelChange\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"count\", \"min\", \"1\", \"max\", \"10\", \"value\", \"5\", 3, \"ngModelChange\", \"ngModel\"], [\"matNativeControl\", \"\", \"name\", \"level\", 3, \"ngModelChange\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n      template: function InputComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n          i0.ɵɵlistener(\"submit\", function InputComponent_Template_form_submit_1_listener() {\n            return ctx.send();\n          });\n          i0.ɵɵelementStart(2, \"mat-form-field\", 1)(3, \"mat-label\");\n          i0.ɵɵtext(4, \"Subject: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function InputComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.details.subject, $event) || (ctx.details.subject = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"mat-form-field\", 1)(7, \"mat-label\");\n          i0.ɵɵtext(8, \"Total Questions: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function InputComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.details.count, $event) || (ctx.details.count = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-form-field\", 1)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Level: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function InputComponent_Template_select_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.details.level, $event) || (ctx.details.level = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(14, \"option\");\n          i0.ɵɵtext(15, \"Beginner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"option\");\n          i0.ɵɵtext(17, \"Intermediate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"option\");\n          i0.ɵɵtext(19, \"Expert\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"button\", 5);\n          i0.ɵɵtext(21, \"Ask GPT\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.details.subject);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.details.count);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.details.level);\n        }\n      },\n      dependencies: [FormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.MaxValidator, i1.NgModel, i1.NgForm, MatFormFieldModule, i2.MatFormField, i2.MatLabel, MatInputModule, i3.MatInput, MatButtonModule, i4.MatButton],\n      styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    width: 400px;\\n    border: 1px solid black;\\n    padding: 20px;\\n    margin: 30px auto;\\n    border-radius: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9haS1hcmVhL2lucHV0L2lucHV0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5mb3JtIHtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXJnaW46IDMwcHggYXV0bztcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return InputComponent;\n})();","map":{"version":3,"names":["EventEmitter","DetailsModel","FormsModule","MatFormFieldModule","MatInputModule","MatButtonModule","InputComponent","details","selected","send","_this","_asyncToGenerator","emit","selectors","outputs","decls","vars","consts","template","InputComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","InputComponent_Template_form_submit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","InputComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtwoWayBindingSet","subject","InputComponent_Template_input_ngModelChange_9_listener","count","InputComponent_Template_select_ngModelChange_13_listener","level","ɵɵadvance","ɵɵtwoWayProperty","i1","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","MaxValidator","NgModel","NgForm","i2","MatFormField","MatLabel","i3","MatInput","i4","MatButton","styles"],"sources":["C:\\Users\\itay7\\Desktop\\Job Interview AI\\Job Interview AI\\src\\app\\components\\ai-area\\input\\input.component.ts","C:\\Users\\itay7\\Desktop\\Job Interview AI\\Job Interview AI\\src\\app\\components\\ai-area\\input\\input.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { DetailsModel } from '../../../models/details.model';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n    selector: 'app-input',\n    imports: [FormsModule, MatFormFieldModule, MatInputModule, MatButtonModule],\n    templateUrl: './input.component.html',\n    styleUrl: './input.component.css'\n})\nexport class InputComponent {\n\n    public details = new DetailsModel();\n\n    @Output()\n    public selected = new EventEmitter<DetailsModel>(); // Declaring an event.\n\n    public async send() {\n        this.selected.emit(this.details); // Raising an event.\n    }\n\n}\n","<div>\n\n    <form (submit)=\"send()\">\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Subject: </mat-label>\n            <input matInput type=\"text\" name=\"subject\" [(ngModel)]=\"details.subject\">\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Total Questions: </mat-label>\n            <input matInput type=\"number\" name=\"count\" [(ngModel)]=\"details.count\" min=\"1\" max=\"10\" value=\"5\">\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Level: </mat-label>\n            <select matNativeControl name=\"level\" [(ngModel)]=\"details.level\">\n                <option>Beginner</option>\n                <option>Intermediate</option>\n                <option>Expert</option>\n            </select>\n        </mat-form-field>\n\n        <button mat-raised-button color=\"primary\">Ask GPT</button>\n\n    </form>\n\n\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}